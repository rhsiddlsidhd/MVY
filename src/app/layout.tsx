import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Logo from "./_components/atoms/Logo";
import SearchBarWithHamburger from "./_components/organisms/SearchBarWithHamburger";
import { getMovieGenres } from "./_services/movie";
import { Genre, GenreContext, GenreResponse } from "./_contexts/GenreContext";
import GenreProvider from "./_contexts/GenreProvider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // ko, en 장르 동시 fetch
  const [genreKo, genreEn] = await Promise.all([
    getMovieGenres<GenreResponse>("ko"),
    getMovieGenres<GenreResponse>("en"),
  ]);

  const mergedGenres =
    genreKo && genreEn
      ? genreKo.genres.map((ko: Genre) => {
          const en = genreEn.genres.find((g: Genre) => g.id === ko.id);
          return {
            id: ko.id,
            ko: ko.name,
            en: en?.name ?? "",
          };
        })
      : [];

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased flex justify-center`}
      >
        <header className="w-full fixed top-0 flex justify-between bg-[#272727] sm:bg-transparent z-50 text-[#B7B508]">
          <Logo />
          <SearchBarWithHamburger />
        </header>
        <GenreProvider value={mergedGenres}>
          <div className="max-w-[1960px] w-full max-sm:pt-[3rem] ">
            {children}
          </div>
        </GenreProvider>
      </body>
    </html>
  );
}
